name: Liman UI Build Pipeline
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Install checkout
        uses: actions/checkout@v2

      - name: Install node
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Setup .next cache
        uses: actions/cache@v3
        with:
          # See here for caching with `yarn` https://github.com/actions/cache/blob/main/examples.md#node---yarn or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**/*.[jt]s', '**/*.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-

      - name: Build Next application
        run: |
          pnpm install
          pnpm build

          [ "$GITHUB_REF" == "refs/heads/master" ] && PRERELEASE=false || PRERELEASE=true
          echo "PRERELEASE=$(echo $PRERELEASE)" >> $GITHUB_ENV
          echo "UI_BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

      - name: Move Next standalone files
        run: |
          cp -r public/ .next/standalone/
          cp -r .next/static .next/standalone/.next/

      - name: Create zip
        run: |
          cd .next/standalone
          rm -rf node_modules/.pnpm
          zip -r /tmp/ui-${{ env.UI_BRANCH }}-${{ github.run_number }}.zip .

      - name: Release ðŸš€
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          files: /tmp/ui-${{ env.UI_BRANCH }}-${{ github.run_number }}.zip
          name: "Release ${{ env.UI_BRANCH }} ${{ github.run_number }}"
          tag_name: "release.${{ env.UI_BRANCH }}.${{ github.run_number }}"
          prerelease: ${{ env.PRERELEASE }}
